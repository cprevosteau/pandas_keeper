# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on: [push]

jobs:
  lint:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install flake
        run: pip install flake8
      - name: Run flake8
        run: flake8
    
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        python-version: [3.6, 3.7, 3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache Python Virtual Environment
      uses: actions/cache@v2
      env:
        cache-name: cache-venv
      with:
        path: .venv
        key: ${{ env.cache-name }}-${{ runner.os }}-${{ matrix.pyhon-version }}
    - name: Cache Python Virtual Environment
      uses: actions/cache@v2
      if: startsWith(runner.os, 'Linux')
      env:
        cache-name: cache-pip
      with:
        path: ~/.cache/pip
        key: ${{ env.cache-name }}-${{ runner.os }}-${{ matrix.pyhon-version }}
    - name: Cache Python Virtual Environment
      uses: actions/cache@v2
      if: startsWith(runner.os, 'macOS')
      env:
        cache-name: cache-pip
      with:
        path: ~/Library/Caches/pip
        key: ${{ env.cache-name }}-${{ runner.os }}-${{ matrix.pyhon-version }}
    - name: Cache Python Virtual Environment
      uses: actions/cache@v2
      if: startsWith(runner.os, 'Windows')
      env:
        cache-name: cache-pip
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ env.cache-name }}-${{ runner.os }}-${{ matrix.pyhon-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry --version
        poetry config virtualenvs.in-project true
        poetry install -vv --extras "excel parquet"
    - name: Test with pytest
      run: |
        poetry run pytest
