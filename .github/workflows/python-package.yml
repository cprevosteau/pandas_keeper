# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on: [push]

jobs:
  lint:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install flake
        run: pip install flake8
      - name: Run flake8
        run: flake8

  # Caching .venv for windows and poetry does not work anymore.
#  test-windows:
#    runs-on: windows-latest
#    strategy:
#      matrix:
#        python-version: [ 3.6, 3.7, 3.8, 3.9 ]
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v2
#        with:
#          python-version: ${{ matrix.python-version }}
#      - name: Get pip cache dir
#        id: pip-cache
#        run: |
#          python -m pip install -U pip
#          echo "::set-output name=dir::$(pip cache dir)"
#      - name: Cache Python Virtual Environment
#        uses: actions/cache@v2
#        env:
#          cache-name: cache-pip
#        with:
#          path: |
#            ${{ steps.pip-cache.outputs.dir }}
#          key: ${{ env.cache-name }}-windows-${{ matrix.python-version }}
#
#      - name: Install dependencies
#        run: |
#          pip install poetry
#          poetry --version
#          poetry config virtualenvs.create false
#          poetry install -vv --extras "excel parquet docs"
#
#      - name: Test with pytest
#        run: |
#          poetry run pytest
#
#      - name: Doctest of documentation
#        run: |
#          cd docs/ && make doctest


  test-unix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Get pip cache dir
      id: pip-cache
      run: |
        python -m pip install -U pip
        echo "::set-output name=dir::$(pip cache dir)"
    - name: Cache Python Virtual Environment
      uses: actions/cache@v2
      env:
        cache-name: cache-pip
      with:
        path: |
          ${{ steps.pip-cache.outputs.dir }}
        key: ${{ env.cache-name }}-${{ runner.os }}-${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        pip install poetry
        poetry --version
        poetry config virtualenvs.create false
        poetry install -vv --extras "excel parquet docs"

    - name: Test with pytest
      run: |
        poetry run pytest

    - name: Doctest of documentation
      run: |
        cd docs/ && make doctest

